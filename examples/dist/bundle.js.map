{"version":3,"sources":["webpack:///webpack/bootstrap 8c3b7831e7e8a3913180","webpack:///./dist/recorder.js","webpack:///./examples/app.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;AChEA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,aAAa;AACb;AACA;AACA;AACA;AACA,sBAAsB;AACttE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,oC;;;;;;;;;;ACpLqB;;AAErB,0EAA0B,yBAAyB;AACnD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI,C","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 8c3b7831e7e8a3913180","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Recorderjs = /** @class */ (function () {\r\n    function Recorderjs(constructor) {\r\n        this.container = document.getElementById(\"\" + constructor.containerID);\r\n        this.mediaOptions = {\r\n            video: {\r\n                tag: 'video',\r\n                type: 'video/mp4',\r\n                ext: '.mp4',\r\n                gUM: { video: true, audio: true }\r\n            },\r\n            audio: {\r\n                tag: 'audio',\r\n                type: 'audio/mp3',\r\n                ext: '.mp3',\r\n                gUM: { audio: true }\r\n            }\r\n        };\r\n        this.mediaType = this.mediaOptions.audio;\r\n        this.counter = 0;\r\n        this.allRecorded = [];\r\n        this.container.insertAdjacentHTML('beforeend', '<button type=\"button\" id=\"start\">Start</button>');\r\n        this.container.insertAdjacentHTML('beforeend', '<button type=\"button\" id=\"stop\">Stop</button>');\r\n        // this.container.insertAdjacentHTML('beforeend', '<div id=\"countdownTimer\"></div>')\r\n        this.start = document.getElementById('start');\r\n        this.stop = document.getElementById('stop');\r\n    }\r\n    /**\r\n     * @function initialiseMedia\r\n     * @description Generates the Recorder object\r\n     */\r\n    Recorderjs.prototype.initialiseMedia = function () {\r\n        var _this = this;\r\n        navigator.mediaDevices.getUserMedia(this.mediaType.gUM).then(function (_stream) {\r\n            _this.stream = _stream;\r\n            _this.start.disabled = false;\r\n            _this.recorder = new MediaRecorder(_this.stream);\r\n            _this.recorder.ondataavailable = function (e) {\r\n                _this.chunks.push(e.data);\r\n                _this.allRecorded.push(e.data);\r\n                // console.log(this.allRecorded)\r\n                if (_this.recorder.state == 'inactive')\r\n                    _this.makeLink();\r\n            };\r\n            console.log('got media successfully');\r\n        }).catch();\r\n        this.start.addEventListener('click', function () {\r\n            _this.startRecording();\r\n        });\r\n        this.stop.addEventListener('click', function () {\r\n            _this.stopRecording();\r\n        });\r\n    };\r\n    /**\r\n     * @function setMediaType\r\n     * @description Changes default media type to specified\r\n     *\r\n     * @param type: string\r\n     */\r\n    Recorderjs.prototype.setMediaType = function (type) {\r\n        if (type == 'video') {\r\n            this.mediaType = this.mediaOptions.video;\r\n        }\r\n        else {\r\n            this.mediaType = this.mediaOptions.audio;\r\n        }\r\n    };\r\n    /**\r\n     * @function toggleMediaType\r\n     * @description toggles current media type\r\n     */\r\n    Recorderjs.prototype.toggleMediaType = function () {\r\n        if (this.mediaType.tag == 'audio') {\r\n            this.mediaType = this.mediaOptions.video;\r\n        }\r\n        else {\r\n            this.mediaType = this.mediaOptions.audio;\r\n        }\r\n    };\r\n    /**\r\n     * @function changeFileType\r\n     * @description changes export file type to specified\r\n     *\r\n     * @param fileType string\r\n     */\r\n    Recorderjs.prototype.changeFileType = function (fileType) {\r\n        this.mediaType.ext = fileType;\r\n    };\r\n    /**\r\n     * @function getMediaType\r\n     * @description returns current media type\r\n     *\r\n     * @returns string\r\n     */\r\n    Recorderjs.prototype.getMediaType = function () {\r\n        return this.mediaType.tag;\r\n    };\r\n    /**\r\n     * @function startRecording\r\n     * @description Starts the recording process\r\n     */\r\n    Recorderjs.prototype.startRecording = function () {\r\n        this.start.disabled = true;\r\n        this.stop.disabled = false;\r\n        this.chunks = [];\r\n        this.recorder.start();\r\n    };\r\n    /**\r\n     * @function stopRecording\r\n     * @description Stops the recording process\r\n     */\r\n    Recorderjs.prototype.stopRecording = function () {\r\n        this.stop.disabled = true;\r\n        this.recorder.stop();\r\n        this.start.disabled = false;\r\n    };\r\n    /**\r\n     * @function getAllRecorded\r\n     * @description returns all recorded media\r\n     *\r\n     * @returns Array of media recordings\r\n     */\r\n    Recorderjs.prototype.getAllRecorded = function () {\r\n        return this.allRecorded;\r\n    };\r\n    /**\r\n     * @function makeLink\r\n     * @description prepares recorded media for download and shows downloadable link\r\n     */\r\n    Recorderjs.prototype.makeLink = function () {\r\n        var blob = new Blob(this.chunks, { type: this.mediaType.type }), url = URL.createObjectURL(blob), li = document.createElement('div'), mt = document.createElement(this.mediaType.tag), bt = document.createElement('button'), hf = document.createElement('a'), dl = document.createElement('button');\r\n        this.counter++;\r\n        mt.controls = true;\r\n        mt.src = url;\r\n        mt.id = 'media-file';\r\n        hf.href = url;\r\n        hf.download = \"\" + this.guid();\r\n        li.id = \"\" + hf.download;\r\n        bt.innerHTML = \"download \" + hf.download + this.mediaType.ext;\r\n        hf.id = 'download-media-file';\r\n        bt.classList.add('btn');\r\n        dl.innerHTML = \"delete media\";\r\n        dl.id = \"delete-\" + this.counter;\r\n        dl.classList.add('btn');\r\n        hf.appendChild(bt);\r\n        li.appendChild(mt);\r\n        li.appendChild(hf);\r\n        li.appendChild(dl);\r\n        this.container.appendChild(li);\r\n        var dlBtn = document.getElementById(\"delete-\" + this.counter);\r\n        var outer = document.getElementById(hf.download);\r\n        dlBtn.addEventListener('click', function () {\r\n            outer.outerHTML = '';\r\n        });\r\n    };\r\n    /**\r\n     * @function guid\r\n     * @description Generates a guid\r\n     *\r\n     * @returns guid\r\n     */\r\n    Recorderjs.prototype.guid = function () {\r\n        return this.s4() + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' +\r\n            this.s4() + '-' + this.s4() + this.s4() + this.s4();\r\n    };\r\n    /**\r\n     * @function s4\r\n     * @description builds part of a guid\r\n     *\r\n     * @returns guid section as String\r\n     */\r\n    Recorderjs.prototype.s4 = function () {\r\n        return Math.floor((1 + Math.random()) * 0x10000)\r\n            .toString(16)\r\n            .substring(1);\r\n    };\r\n    return Recorderjs;\r\n}());\r\nexports.Recorderjs = Recorderjs;\r\n//# sourceMappingURL=recorder.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dist/recorder.js\n// module id = 0\n// module chunks = 0","import { Recorderjs } from '../dist/recorder'\r\n\r\nvar rec = new Recorderjs({ containerID: 'gUMArea' })\r\nrec.setMediaType('video')\r\n// alert(rec.getMediaType())\r\n// rec.changeFileType('wav')\r\nrec.initialiseMedia()\r\n\r\n// document.getElementById('toggle').addEventListener('click', () => {\r\n// \trec.toggleMediaType()\r\n// \trec.initialiseMedia()\r\n// })\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./examples/app.js\n// module id = 1\n// module chunks = 0"],"sourceRoot":""}